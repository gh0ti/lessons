{"version":3,"sources":["_fonts.scss","_reset.scss","style.scss","_header.scss","_mixins.scss"],"names":[],"mappings":"AAAQ;AAEA;AACA;AAEA;AACA;ACNR;AAAA;AAAA;EAGE;EACA;EACA;EAEA;;;AAGF;AAAA;EAEE;;;AAIF;EACE;EACA;EACA;;;AAEF;EACE;;;AAEF;EACE;;;AAEF;AAAA;AAAA;AAAA;AAAA;AAAA;EAME;EACA;;;AAEF;AAAA;EAEE;EACA;;;AAEF;AAAA;AAAA;EAGE;EACA;EACA;EACA;EACA;;;AAEF;AAAA;EAEE;;;AAEF;AAAA;AAAA;EAGE;;;AAEF;AAAA;AAAA;AAAA;EAIE;;;ACzDF;EACI;EAEA;EAEA;;;AAGJ;EACI;EACA;;;AAGJ;EACI;EACA;EACA;;;ACTA;EAII;EAGA;EAEA;EACA;;ACiCA;ED3CJ;IC4CQ;;;AAIR;EAEI;IDlDJ;MCmDQ,aAhBQ;;;EAmBZ;IDtDJ;MCuDQ;;;;AAIJ;ED3DJ;IC4DQ;;;AAjBJ;ED3CJ;IC4CQ;;;AAIR;EAEI;IDlDJ;MCmDQ,gBAhBQ;;;EAmBZ;IDtDJ;MCuDQ;;;;AAIJ;ED3DJ;IC4DQ;;;AAjBJ;ED3CJ;IC4CQ;;;AAIR;EAEI;IDlDJ;MCmDQ,KAhBQ;;;EAmBZ;IDtDJ;MCuDQ;;;;AAIJ;ED3DJ;IC4DQ;;;ADhDJ;EAZJ;IAaQ;IACA;;;AAIR;EACI;EACA;EACA;;AAKJ;EACI;EAEA;EAEA;EACA;;ACWA;EDjBJ;ICkBQ;;;AAIR;EAEI;IDxBJ;MCyBQ,WAhBQ;;;EAmBZ;ID5BJ;MC6BQ;;;;AAIJ;EDjCJ;ICkCQ;;;ADzBR;EACI;EAEA;EACA;EAEA;EAEA;;AAEA;EAVJ;IAWQ;;;AAGJ;EACI;EACA;EAEA;EAEA;EAEA;;AAEJ;EACI;;AAEJ;EACI;;AAIR;EACI;EAEA;EAIA;EACA;EAEA;EAEA;;ACpCA;EDwBJ;ICvBQ;;;AAIR;EAEI;IDiBJ;MChBQ,KAhBQ;;;EAmBZ;IDaJ;MCZQ;;;;AAIJ;EDQJ;ICPQ;;;AAjBJ;EDwBJ;ICvBQ;;;AAIR;EAEI;IDiBJ;MChBQ,WAhBQ;;;EAmBZ;IDaJ;MCZQ;;;;AAIJ;EDQJ;ICPQ;;;ADqBJ;EAdJ;IAoBQ;IACA;IACA;IACA;IAEA;IAKA;IAEA;;;AAGJ;EACI;EAEA;EAEA;EACA;EAEA;;AAEA;EAVJ;IAWQ;IACA;IAEA;;;AAKR;EACI;EACA;;AACA;EACI;EACA;EAEA;EACA;EACA;EAGA;EAEA;EAEA;;AAEJ;EAEQ;IACI;;;AAMhB;EAEI;EACA;EACA;;AAMJ;EACI;EACA","file":"style.css","sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Exo+2&display=swap');\n//@import url('https://fonts.googleapis.com/css2?family=Exo:wght@400,700&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Exo&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Exo:wght@700&display=swap');\n//@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@700,900&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@700&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@900&display=swap');\n","*,\n*::before,\n*::after{\n  padding: 0;\n  margin: 0;\n  border: none;\n\n  box-sizing: border-box;\n}\n\n*::before,\n*::after{\n  display: inline-block;\n\n}\n\na{\n  text-decoration: none;\n  color: inherit;\n  display: inline-block;\n}\nli{\n  list-style: none;\n}\nimg {\n  vertical-align: top;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6{\n  font-weight: inherit;\n  font-size: inherit;\n}\nhtml,\nbody{\n  line-height: 1;\n  height: 100%;\n}\ninput,\nbottom,\ntextarea {\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n  color: inherit;\n  background-color: transparent;\n}\ninput,\ntextarea {\n  width: 100%;\n}\nbutton,\nselect,\noption {\n  cursor: pointer;\n}\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"tel\"],\ntextarea {\n  appearance: none;\n}\n","@import \"reset\";\n\n@import \"fonts\";\n\n\n\nbody {\n    background-color: #000;\n\n    font-family: \"Exo\", sans-serif;\n\n    color: #fff;\n}\n\n.wrapper {\n    min-height: 100%;\n    overflow: clip;\n}\n\n[class*=__container] {\n    max-width: 1300px;\n    margin: 0 auto;\n    padding: 15px;\n}\n\n@import \"header\";\n\n@import \"main\";\n","@import \"mixins\";\n\n// adaptive properties\n$minWidth: 400;\n$maxWidth: 1920;\n$maxWidthContainer: 1300;\n$containerPadding: 30;\n$containerWidth: $maxWidthContainer + $containerPadding;\n\n// breakpoints\n$burgerBreakpoint: 829px;\n\n.header {\n    &__container {\n        @include adaptiveValue('padding-top', 70, 50, 0, $containerWidth, 605);\n        @include adaptiveValue('padding-bottom', 40, 17, 0, $containerWidth, 605);\n\n        display: flex;\n        @include adaptiveValue('gap', 110, 20, 0, $containerWidth, 874);\n\n        position: relative;\n\n        align-items: center;\n        justify-content: space-between;\n\n        @media (max-width: $burgerBreakpoint) {\n            flex-direction: column;\n            align-items: start;\n        }\n    }\n\n    &__title-container {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        //flex-grow: 1;\n        //width: 100%;\n    }\n\n    &__title {\n        white-space: nowrap;\n\n        font-family: \"Exo 2\", sans-serif;\n        @include adaptiveValue('font-size', 30, 16);\n        font-size: 30px;\n        letter-spacing: -.1em;\n    }\n\n    &__burger {\n        display: none;\n\n        height: 2px;\n        width: 22px;\n\n        position: relative;\n\n        background-color: #fff;\n\n        @media (max-width: $burgerBreakpoint) {\n            display: block;\n        }\n\n        &::before, &::after {\n            height: 2px;\n            width: 100%;\n\n            position: absolute;\n\n            background-color: #fff;\n\n            content: \"\";\n        }\n        &::before {\n            top: -8px;\n        }\n        &::after {\n            bottom: -8px;\n        }\n    }\n\n    .nav {\n        display: flex;\n\n        flex-grow: 1;\n\n        @include adaptiveValue('gap', 110, 20, 0, $containerWidth, 874);\n\n        align-items: center;\n        justify-content: space-between;\n\n        font-family: \"Orbitron\", sans-serif;\n        @include adaptiveValue('font-size', 16, 12);\n        font-weight: 700;\n\n        @media (max-width: $burgerBreakpoint) {\n            //display: none;\n            //height: 300px;\n            //height: 100%;\n            //overflow: auto;\n\n            display: flex;\n            flex-direction: column;\n            justify-content: start;\n            flex-grow: 0;\n\n            gap: 20px;\n\n            //position: absolute;\n            //top: 100%;\n\n            border: 1px solid white;\n\n            background-color: #555;\n        }\n\n        &__menu {\n            display: flex;\n\n            gap: 20px;\n            //row-gap: 10px;\n            flex-wrap: wrap;\n            flex-grow: 1;\n\n            justify-content: space-between;\n\n            @media (max-width: $burgerBreakpoint) {\n                flex-direction: column;\n                align-items: center;\n                //flex-grow: 0;\n                justify-content: start;\n\n            }\n        }\n\n        &__item-menu {\n            position: relative;\n            text-transform: uppercase;\n            &::after {\n                height: 2px;\n                width: 0;\n\n                position: absolute;\n                top: 100%;\n                left: 0;\n                //width: 100%;\n\n                background-color: #fff;\n\n                content: '';\n\n                transition: width .2s ease-in;\n            }\n            @media (any-hover: hover) {\n                &:hover {\n                    &::after {\n                        width: 100%;\n                    }\n                }\n            }\n        }\n\n        &__social {\n\n            display: flex;\n            gap: 19px;\n            align-items: center;\n        }\n\n        &__item-social {\n        }\n\n        &__image-social {\n            height: 20px;\n            width: 20px;\n        }\n    }\n}\n","@use \"sass:math\";\n\n//Percent\n@function percent($px, $from: 100) {\n    $result: math.div($px, $from) * 100%;\n    @return $result;\n}\n//REM\n@function toRem($px, $current: 16) {\n    $result: math.div($px, $current) + rem;\n    @return $result;\n}\n//EM\n@function toEm($px, $current: 16) {\n    $result: math.div($px, $current) + em;\n    @return $result;\n}\n\n// Адаптивна властивість (clamp)\n@mixin adaptiveValue($property, $startSize, $minSize, $keepSize: 0, $widthFrom: $containerWidth, $widthTo: $minWidth) {\n    @if ($startSize==0) {\n        $startSize: 0.000001;\n    }\n    @if ($minSize==0) {\n        $minSize: 0.000001;\n    }\n\n    // Для calc();\n    $addSize: math.div($startSize - $minSize, 16);\n\n    @if ($widthFrom == $containerWidth and $maxWidthContainer == 0) {\n        $widthFrom: $maxWidth;\n    }\n\n    // Брейк-поїнти в EM\n    $widthFromMedia: toEm($widthFrom);\n    $widthToMedia: toEm($widthTo);\n\n    // Формула плаваючого значення\n    // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/\n    $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));\n    $yIntersection: -$widthTo * $slope + $minSize;\n    @if ($yIntersection==0) {\n        $yIntersection: 0.000001;\n    }\n    $flyValue: #{toRem($yIntersection)}\" + \" #{$slope * 100}vw;\n\n    // Отримання значення властивості\n    $propertyValue: #{\"clamp(\" toRem($minSize) \",\" $flyValue \",\" toRem($startSize) \")\"};\n    // Якщо негативні значення\n    @if ($minSize > $startSize) {\n        $propertyValue: #{\"clamp(\" toRem($startSize) \",\" $flyValue \",\" toRem($minSize) \")\"};\n    }\n\n    // Встановлюємо значення за замовчуванням\n    @if $keepSize != 1 and $keepSize != 3 {\n        @media (min-width: $widthFromMedia) {\n            #{$property}: toRem($startSize);\n        }\n    }\n    // Адаптуємо розмір у проміжку між зазначеними ширинами в'юпорту\n    @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {\n        // Якщо підтримується clamp();\n        @supports (#{$property}: $propertyValue) {\n            #{$property}: $propertyValue;\n        }\n        // Якщо не підтримується clamp();\n        @supports not (#{$property}: $propertyValue) {\n            #{$property}: calc(#{toRem($minSize)} + #{$addSize} * (100vw - #{toRem($widthTo)}) / #{math.div($widthFrom, 16) - math.div($widthTo, 16)});\n        }\n    }\n    @if $keepSize != 1 and $keepSize != 2 {\n        @media (max-width: $widthToMedia) {\n            #{$property}: toRem($minSize);\n        }\n    }\n}\n"]}